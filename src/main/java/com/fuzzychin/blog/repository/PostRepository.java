package com.fuzzychin.blog.repository;


import com.fuzzychin.blog.bean.Post;
import com.fuzzychin.blog.bean.Tag;
import com.fuzzychin.blog.bean.User;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;

//TODO read the link below.
//http://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation

@Repository
public interface PostRepository extends JpaRepository<Post, Long> {

    /*
    List<Post> findAll(); //This is created by default based on the Spring "Magic" of JPA

    */

    //This is a method being declared on an interface. Because this is a JPA Repository it used the syntax above (link)
    //to take the method name - findAllByUser - and generate the SQL. The following method name would generate (on compile)
    //the following SQL Syntax.
    //SELECT * FROM POST JOIN USER ON POST.USER=USER.ID
    //This is the lamens of what it generates if you really want to see the call and what is generated by Spring look at the
    //SQL generated in the log output when you have the property
    //List<Post> findByUser(User user);

    List<Post> findByTags(List<Tag> tags);

}
